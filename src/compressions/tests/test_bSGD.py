import unittest
from src.compressions.bSGD import *
import tensorflow as tf


class TestbSGD(unittest.TestCase):
    def test_bsgd(self):
        b = bSGD(buckets=3, sparse_buckets=1)

        # grad = tf.constant(np.random.rand(1000, 100), dtype=tf.float32)
        grad = tf.constant([1, 4, 2, -10, 22, -3, -7, 8], dtype=tf.float32)

        # print("calc:", b.compress(grad, grad).numpy())
        # print(b.compression_rates)

        print(np.mean(np.array([[1, 3, ], [5, 7]]), axis=1))

        length = grad.shape[0]
        base_size = length // 3
        extra = length % 3

        sizes = [base_size + 1 if i < extra else base_size for i in range(3)]

        print(sizes, base_size)
        print([int(grad.shape[0]) / 3 for i in range(3)])

        print(np.mean(
            [0.9365000128746033, 0.9587000012397766, 0.9742000102996826, 0.9739999771118164, 0.9765999913215637,
             0.9805999994277954, 0.9775999784469604, 0.9825999736785889, 0.9736999869346619, 0.982699990272522,
             0.9835000038146973, 0.9847000241279602, 0.9839000105857849, 0.9842000007629395, 0.9868999719619751,
             0.9833999872207642, 0.9878000020980835, 0.9858999848365784, 0.9840999841690063, 0.9872000217437744,
             0.9829999804496765, 0.98580002784729, 0.9850000143051147, 0.9882000088691711, 0.9872999787330627,
             0.9860000014305115, 0.9866999983787537, 0.986299991607666, 0.9873999953269958, 0.9847999811172485,
             0.9883000254631042, 0.9866999983787537, 0.9876000285148621, 0.9857000112533569, 0.9858999848365784,
             0.9879999756813049, 0.9884999990463257, 0.9890000224113464, 0.9883000254631042, 0.9857000112533569,
             0.9872999787330627, 0.9898999929428101, 0.9897000193595886, 0.9905999898910522, 0.9901000261306763]))


if __name__ == '__main__':
    unittest.main()
